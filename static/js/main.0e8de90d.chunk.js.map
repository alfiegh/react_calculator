{"version":3,"sources":["App.js","index.js"],"names":["App","useState","expression","setExpression","answer","setAnswer","display","symbol","prevValue","test","length","newValue","slice","count","i","isNaN","valArr","split","lastNumber","console","log","replace","calculate","eval","allClear","clear","prev","join","className","value","placeholder","disabled","id","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e8de90d.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n\nfunction App() {\n  const [expression, setExpression] = useState('');\n  const [answer, setAnswer] = useState(expression);\n\n  function display(symbol) {\n    setExpression(prevValue => {\n      if (\n        /[+*-/]/.test(symbol) &&\n        /[+*-/]/.test(prevValue[prevValue.length - 1])\n      ) {\n        let newValue;\n        if (/[-]/.test(symbol)) {\n          newValue = prevValue.slice(0, prevValue.length) + symbol;\n        } else {\n          let count = 0;\n          for (let i = 0; i < prevValue.length; i++) {\n            if (isNaN(+prevValue[i])) {\n              count++;\n            } else {\n              count = 0;\n            }\n          }\n          newValue = prevValue.slice(0, prevValue.length - count) + symbol;\n        }\n\n        setExpression(newValue);\n      } else {\n        if (prevValue) {\n          prevValue = prevValue + '';\n          let valArr = prevValue.split(/[+/*-]/g);\n          // console.log('valArr ' + JSON.stringify(valArr));\n          let lastNumber = valArr[valArr.length - 1];\n          if (!isNaN(lastNumber) && /[.]/.test(lastNumber) && symbol === '.') {\n            console.log('symbol = empty ');\n            symbol = '';\n          }\n        }\n\n        setExpression(\n          (prevValue + symbol).replace(/^0/g, '').replace(/\\.+/g, '.')\n        );\n      }\n    });\n\n    setAnswer(prevValue =>\n      (prevValue + symbol).replace(/^0/g, '').replace(/\\.+/g, '.')\n    );\n  }\n\n  function calculate() {\n    setAnswer(eval(expression));\n    setExpression(eval(expression));\n  }\n  function allClear() {\n    setExpression('');\n    setAnswer(0);\n  }\n  function clear() {\n    setExpression(prev => {\n      setAnswer(0);\n      prev = prev + '';\n      return prev\n        .split('')\n        .slice(0, prev.length - 1)\n        .join('');\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"grid\">\n        <div className=\"dis\">\n          <input\n            // class=\"expression\"\n            value={expression}\n            placeholder=\"0\"\n            disabled\n          />\n          <input\n            id=\"display\"\n            className=\"answer\"\n            disabled\n            value={answer}\n          ></input>\n        </div>\n        <div\n          onClick={allClear}\n          className=\"padButton AC\"\n          id=\"allClear\"\n          id=\"clear\"\n        >\n          AC\n        </div>\n        <div onClick={clear} className=\"padButton C\">\n          C\n        </div>\n        <div\n          onClick={() => display('/')}\n          className=\"padButton operators\"\n          id=\"divide\"\n        >\n          /\n        </div>\n        <div\n          onClick={() => display('*')}\n          className=\"padButton operators\"\n          id=\"multiply\"\n        >\n          *\n        </div>\n        <div onClick={() => display('7')} className=\"padButton\" id=\"seven\">\n          7\n        </div>\n        <div onClick={() => display('8')} className=\"padButton\" id=\"eight\">\n          8\n        </div>\n        <div onClick={() => display('9')} className=\"padButton\" id=\"nine\">\n          9\n        </div>\n        <div\n          onClick={() => display('-')}\n          className=\"padButton operators\"\n          id=\"subtract\"\n        >\n          -\n        </div>\n        <div onClick={() => display('4')} className=\"padButton\" id=\"four\">\n          4\n        </div>\n        <div onClick={() => display('5')} className=\"padButton\" id=\"five\">\n          5\n        </div>\n        <div onClick={() => display('6')} className=\"padButton\" id=\"six\">\n          6\n        </div>\n        <div\n          onClick={() => display('+')}\n          className=\"padButton operators\"\n          id=\"add\"\n        >\n          +\n        </div>\n        <div onClick={() => display('1')} className=\"padButton\" id=\"one\">\n          1\n        </div>\n        <div onClick={() => display('2')} className=\"padButton\" id=\"two\">\n          2\n        </div>\n        <div onClick={() => display('3')} className=\"padButton\" id=\"three\">\n          3\n        </div>\n        <div onClick={calculate} className=\"padButton operators\" id=\"equals\">\n          =\n        </div>\n        <div onClick={() => display('0')} className=\"padButton\" id=\"zero\">\n          0\n        </div>\n        <div onClick={() => display('.')} className=\"padButton\" id=\"decimal\">\n          .\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}